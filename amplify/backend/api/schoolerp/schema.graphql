type Subject @model @auth(rules: [{allow: public}]) {
  id: ID!
  subject_id: Int
  subject_name: String
  details: AWSJSON
  subject_marks: String
}

type Class @model @auth(rules: [{allow: public}]) {
  id: ID!
  subject_id: Int
  class_id: Int
  class_name: String
  dept_name: String
  shift: String
  details: AWSJSON
  year: Int
}

type Teacher @model @auth(rules: [{allow: public}]) {
  id: ID!
  joining_date: AWSDate
  year: Int
  first_name: String
  middle_name: String
  last_name: String
  dob: AWSDate
  religion: String
  email: AWSEmail
  mobile: String
  details: AWSJSON
  teacher_id: Int
  school_id: Int
}

type Student @model @auth(rules: [{allow: public}]) {
  id: ID!
  student_id: Int 
  enroll_date: AWSDate
  class_id: Int
  enroll_fee: Float
  first_name: String
  middle_name: String
  year: Int
  father_name: String
  mother_name: String
  last_name: String
  religion: String
  email: AWSEmail
  mobile: String
  details: AWSJSON
  dob: AWSDate
  school_id: Int @index(name: "studentsByCreatedDate", queryField: "studentsByCreatedDate", sortKeyFields: ["createdAt"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Schools @model @auth(rules: [{allow: public}]) {
  id: ID!
  school_id: Int
  name: String
  principal: Employee @hasOne
  details: AWSJSON
  phone: String
  mobile: String
  email: AWSEmail
  address: Address @hasOne
}

type Employee @model @auth(rules: [{allow: public}]) {
  id: ID!
  joining_date: AWSDate
  first_name: String
  middle_name: String
  last_name: String
  dob: AWSDate
  email: AWSEmail
  mobile: String
  details: AWSJSON
}

type Address @model @auth(rules: [{allow: public}]) {
  id: ID!
  line1: String
  line2: String
  line3: String
  city: String
  district: String
  state: String
  country: String
  zip: String
}
 